/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import Koneksi.koneksi ;
import javax.swing.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class pelanggan extends javax.swing.JFrame {

    /**
     * Creates new form pelanggan
     */
    public pelanggan() {
        initComponents();
         tampilkanDataPelanggan();
         
    }
    
    public void resetForm() {
    txtID.setText("");
    txtNama.setText("");
    txtAlamat.setText("");
    txtID.requestFocus();
    txtTelepon.setText("");// fokus balik ke field ID (opsional)

    // Kalau pakai tombol update/hapus, bisa disable juga:
    ubah.setEnabled(false);
    hapus.setEnabled(false);
    simpan.setEnabled(true); // aktifkan simpan lagi
}
    public void tampilDataKeTabel() {
    DefaultTableModel model = (DefaultTableModel) tabelPelanggan.getModel();
    model.setRowCount(0); // Hapus semua baris (reset tabel)

    try {
        Connection conn = DriverManager.getConnection("url", "username", "password");
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM pelanggan");

        while (rs.next()) {
            String id = rs.getString("id_pelanggan");
            String nama = rs.getString("nama");
            String alamat = rs.getString("alamat");
            // Tambah baris ke tabel
            model.addRow(new Object[]{id, nama, alamat});
        }
        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
}
}
    private void tampilkanDataPelanggan() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Nama Pelanggan");
    model.addColumn("Jenis Kelamin");
    model.addColumn("No Telp");
    model.addColumn("Alamat");

    try {
        String query = "SELECT * FROM pelanggan";
        Connection conn = koneksi.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(query);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("id_pelanggan"),
                rs.getString("nama_pelanggan"),
                rs.getString("jenis_kelamin"),
                rs.getString("no_telepon"),
                rs.getString("alamat")
            });
        }

        tabelPelanggan.setModel(model); // Ganti dengan nama JTable kamu
    } catch (Exception e) {
        System.out.println("Gagal menampilkan data: " + e.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        groupkelamin = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        nama = new javax.swing.JLabel();
        kelamin = new javax.swing.JLabel();
        telepon = new javax.swing.JLabel();
        alamat = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtTelepon = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        simpan = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelPelanggan = new javax.swing.JTable();
        rbLaki = new javax.swing.JRadioButton();
        rbPerempuan = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txtcari = new javax.swing.JTextField();
        cari = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Pelanggan");

        id.setText("ID Pelanggan");

        nama.setText("Nama Pelanggan");

        kelamin.setText("Jenis Kelamin");

        telepon.setText("No. Telepon");

        alamat.setText("Alamat");

        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        txtAlamat.setColumns(20);
        txtAlamat.setRows(5);
        jScrollPane1.setViewportView(txtAlamat);

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        ubah.setText("Ubah");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        tabelPelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Jenis Kelamin", "Telepon", "Alamat"
            }
        ));
        tabelPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPelangganMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelPelanggan);

        groupkelamin.add(rbLaki);
        rbLaki.setText("Laki-Laki");

        groupkelamin.add(rbPerempuan);
        rbPerempuan.setText("Perempuan");

        jLabel7.setText("Nama Pelanggan");

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nama, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(telepon, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id)
                                    .addComponent(kelamin)
                                    .addComponent(alamat))
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbLaki)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbPerempuan))
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(simpan)
                                    .addGap(18, 18, 18)
                                    .addComponent(ubah)
                                    .addGap(18, 18, 18)
                                    .addComponent(hapus)
                                    .addGap(16, 16, 16)
                                    .addComponent(batal)
                                    .addGap(18, 18, 18)
                                    .addComponent(keluar))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtcari, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(74, 74, 74)
                                    .addComponent(cari))))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nama)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kelamin)
                    .addComponent(rbLaki)
                    .addComponent(rbPerempuan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telepon)
                    .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alamat)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpan)
                    .addComponent(ubah)
                    .addComponent(keluar)
                    .addComponent(batal)
                    .addComponent(hapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        
   int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String id = txtID.getText();

            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/db_toko", "root", "");
            String sql = "DELETE FROM pelanggan WHERE id_pelanggan = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, id);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            conn.close();

            tampilkanDataPelanggan();
            

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal hapus data: " + e.getMessage());
 }
}


    }//GEN-LAST:event_hapusActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed

    String id = txtID.getText();
    String nama = txtNama.getText();
    String telepon = txtTelepon.getText();
    String alamat = txtAlamat.getText();
    String jk = "";
    if (rbLaki.isSelected()) {
        jk = "Laki-laki";
    } else if (rbPerempuan.isSelected()) {
        jk = "Perempuan";
    }

    try {
        String sql = "INSERT INTO pelanggan VALUES (?, ?, ?, ?, ?)";
        java.sql.Connection conn = koneksi.getConnection();
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, id);
        pst.setString(2, nama);
        pst.setString(3, jk);
        pst.setString(4, telepon);
        pst.setString(5, alamat);
        pst.executeUpdate();
        javax.swing.JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
        conn.close();
        tampilkanDataPelanggan();
        
       
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage());
    }
    
    

    }//GEN-LAST:event_simpanActionPerformed

    private void tabelPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPelangganMouseClicked
        
    int baris = tabelPelanggan.getSelectedRow();

    String id = tabelPelanggan.getValueAt(baris, 0).toString();
    String nama = tabelPelanggan.getValueAt(baris, 1).toString();
    String jk = tabelPelanggan.getValueAt(baris, 2).toString();
    String telp = tabelPelanggan.getValueAt(baris, 3).toString();
    String alamat = tabelPelanggan.getValueAt(baris, 4).toString();

    txtID.setText(id);
    txtNama.setText(nama);
    txtTelepon.setText(telp);
    txtAlamat.setText(alamat);
ubah.setEnabled(true);
hapus.setEnabled(true);
simpan.setEnabled(false);

    // Pilih radio button sesuai jenis kelamin
    if (jk.equals("Laki-laki")) {
        rbLaki.setSelected(true);
    } else {
        rbPerempuan.setSelected(true);
}

    }//GEN-LAST:event_tabelPelangganMouseClicked

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        
    try {
        String sql = "UPDATE pelanggan SET nama_pelanggan=?, jenis_kelamin=?, no_telepon=?, alamat=? WHERE id_pelanggan=?";
        Connection conn = koneksi.getConnection(); // pastikan koneksi sukses
        PreparedStatement pst = conn.prepareStatement(sql);

        pst.setString(1, txtNama.getText());
        pst.setString(2, rbLaki.isSelected() ? "Laki-laki" : "Perempuan");
        pst.setString(3, txtTelepon.getText());
        pst.setString(4, txtAlamat.getText());
        pst.setString(5, txtID.getText()); // <-- pastikan ini tidak kosong

        int rowsAffected = pst.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
            tampilkanDataPelanggan(); // refresh tabel
        } else {
            JOptionPane.showMessageDialog(null, "ID tidak ditemukan atau tidak ada perubahan data.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal mengubah data: " + e.getMessage());
}
    }//GEN-LAST:event_ubahActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        resetForm();
    }//GEN-LAST:event_batalActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        
    int konfirmasi = JOptionPane.showConfirmDialog(null, "Yakin ingin keluar?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (konfirmasi == JOptionPane.YES_OPTION) {
        System.exit(0); // atau this.dispose();
}

    }//GEN-LAST:event_keluarActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
       
     String keyword = txtcari.getText(); // Ambil teks dari input cari

    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("id_pelanggan");
    model.addColumn("nama_pelanggan");
    model.addColumn("jenis_kelamin");
    model.addColumn("no_telepon");
    model.addColumn("alamat");

    try {
        String sql = "SELECT * FROM pelanggan WHERE nama_pelanggan LIKE ?";
        Connection conn = Koneksi.koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, "%" + keyword + "%");

        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_pelanggan"),
                rs.getString("nama_pelanggan"),
                rs.getString("jenis_kelamin"),
                rs.getString("no_telepon"),
                rs.getString("alamat")
            });
        }

        tabelPelanggan.setModel(model); // Tampilkan hasil ke tabel

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
}

    }//GEN-LAST:event_cariActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pelanggan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamat;
    private javax.swing.JButton batal;
    private javax.swing.JButton cari;
    private javax.swing.ButtonGroup groupkelamin;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel kelamin;
    private javax.swing.JButton keluar;
    private javax.swing.JLabel nama;
    private javax.swing.JRadioButton rbLaki;
    private javax.swing.JRadioButton rbPerempuan;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabelPelanggan;
    private javax.swing.JLabel telepon;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtTelepon;
    private javax.swing.JTextField txtcari;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
